---
title: Kleiner Computer mit Raspberry Pi Zero
author: Olav Schettler
date: 2021-06-13
tags: Small Computers
image: blog/pigadget-1024.jpg
---

Kleine Computer sind voll im Trend. Begonnen hat dieser Trend in den 1970er Jahren mit den Homecomputern. Damals grenzten sie sich von den schrankgroßen Minicomputern ab und machten das erste Mal Computer für jedermann erschwinglich. Auf die erste Generation von Einplatinencomputern wie dem KIM-1, die sich noch vornehmlich an Bastler richteten, folgten Geräte wir der Apple II, der C64 oder der BBC Micro. Diese Computer basierten auf 8Bit-Prozessoren wie dem Z80, dem 6502 und - seltener - dem 6809. Sie starteten direkt die Programmiersprache BASIC und hatten meist umfangreiche Handbücher, die den Besitzern das Programmieren ihrer neuen Hausbewohner beibrachten.

Diesen ersten Heimcomputern folgten Ende der 1980er Jahre leistungsfähigere 16Bit-Maschinen wie die ST-Computer von Atari, die Amigas von Commodore und die ersten Macintosh-Computer von Apple. Diese Vielfalt fiel dann leider in den 1990 Jahren den PC Clones mit erst MS-DOS und dann Windows zum Opfer.

Ende der 1990er Jahre dachte man eigentlich, dass sich lokal installierte Anwendungen überlebt hätten und das ein Computer eigenlich nur noch einen Webbrowser beherbergen müsste. Allerdings erleben ja "Apps" durch die lukrativen Geschäfte im AppStore und PlayStore auf Desktop-Computern gerade eine Wiedergeburt.

Trotz dieser Entwicklung seit den 90er Jahren waren die 8Bit-Maschinen nie ganz tot. Moderne Computer sind inzwischen leistungsfähig genug, dass sie die alten Maschinen komplett simulieren können. Die sogenannten Emulatoren gibt es meist frei verfügbar für jeden der alten 8Bit-Klassiker. So ist es heute immer noch möglich, die alten Spiele zu spielen oder sogar neue zu entwickeln.

Abseits der reinen Emulation von klassischen Maschinen gibt es inzwischen, inspiriert vom Erfinder dieses Genres, PICO-8, unzählige Fantasiekonsolen. Fantasiekonsolen bringen den Spaß zurück, in einer eingeschränkten Programmierumgebung kreativ zu werden. In [einem Artikel zu möglichen Coding-Aktivitäten](https://codekulturbonn.de/activities.html) habe ich ein paar davon beschrieben.

Neben dem Erhalt dieser alten Software und dem Spaß daran, in wenig komplexen, realen oder Fantasiecomputern kreativ zu sein, gibt es auch noch die Ablehnung unnötiger Komplexität als Motivator, neue Geräte im Stil der alten 8Bit-Computer zu schaffen. Ein Beispiel ist die [virtuelle Maschine UXN](https://100r.co/site/uxn.html) von 100 Rabbits. Die beiden Betreiber eines segelnden Entwicklerstudios portieren ihre Spiele und Werkzeuge auf diese selbst geschriebene Umgebung, um sich von der Abhängigkeit von großen, stromfressenden und proprietären Systemen zu lösen.

Ganz passend zu dem Thema machte mich [ein Post](https://merveilles.town/@neauoire/106404485853402110) von einem der beiden 100 Rabbits im Fediverse auf [den Workshop zu Computing within Limits](https://computingwithinlimits.org/2021/) aufmerksam, der heute und morgen mit einigen interessanten Papers im Netz läuft.

Es gibt einen anderen Grund, möglichst einfache Computer zu bevorzugen. Langlebigkeit. In seinem Artikel [Der hundertjährige Computer](https://thedorkweb.substack.com/p/the-100-year-computer) beschreibt Steve Lord seinen Weg hin zu einem anderen System aus der Zeit der 8-Bit-Computer, CP/M.

Am Wochenende habe ich auf der Basis eines Raspberry Pi Zero, eines Siebenzoll-Displays und einer einfachen Holzkiste meinen eigenen Minicomputer gebaut.

![Computer mit Raspberry Pi Zero](/images/blog/pi1-1024.jpg)
![Computer mit Raspberry Pi Zero](/images/blog/pi2-1024.jpg)

Normalerweise nutze ich eine alte Bluetooth-Tastatur aus einer iPad-Hülle für die Eingabe. Wenn ich eine Maus brauche (selten), kann ich aber auch eine Raspberry PI-Tastatur mit USB-Hub anschliessen.

Auf dem Gerätchen läuft normalerweise keine grafische Oberfläche, sondern nur die Textkonsole. Mit `tmux` habe ich darin mehrere Fenster. In der Konsole könnte ich z.B. mit dem tollen Outliner `hnb` mein Leben organisieren in `sc` Tabellen berechnen, oder per `alpine` auf mein Gmail-Konto zugreifen.

Ich kann aber auch [per TIC-80 in Wren programmieren](https://codekulturbonn.de/tic80.html) oder mit den [UXN-Programmen von 100 Rabbits](https://git.sr.ht/~rabbits/uxn/) herumspielen.

Python läuft natürlich auch. Was will man eigentlich mehr?
